<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Box</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>3</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>intVY = 0;
intVYMax = 9;
intGravity = 0.4;
intVX = 0;
bolDraw = 0;
randomize()
maxRnd = array_height_2d(obj_Player.arrWeapon)-1;   //Maximo de NÂ°armas
intRnd = irandom_range(1,maxRnd);                   //Numero de arma que va a dar
intBullet = irandom_range(1, ceil(obj_Player.arrWeapon[intRnd,3]/3));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Desplazamiento
var bolGround = scr_Suelo()
if (!bolGround)intVY = scr_Approach(intVY, intVYMax, intGravity)

//if (obj_Player.arrWeapon[intRnd,4] == "Health") &amp;&amp; (intBullet == 0) instance_destroy();

insMovilH   = instance_place(x, y + 1, obj_MovilH);
//Velocidad sobre plataformas moviles
if (instance_place(x, y + 1, obj_MovilH)) &amp;&amp; (!instance_place(x, y, obj_MovilH)) x += insMovilH.intVX


repeat(abs(intVX))
{
    if place_meeting(x + sign(intVX), y, obj_Block)
    {
        intVX = 0
        break
    }
    else x += sign(intVX)
}

if place_meeting(x, y+1, obj_RampaR) x--
else if place_meeting(x, y+1, obj_RampaL) x++

repeat(abs(intVY))
{
    if place_meeting(x, y + sign(intVY), obj_Block)
    {
        intVY = 0
        break
    }
    else if place_meeting(x, y + sign(intVY), obj_Plataforma) &amp;&amp; !place_meeting(x, y, obj_Plataforma) &amp;&amp; (intVY &gt;= 0)
    {
        intVY = 0
        break
    }
    else if place_meeting(x, y + sign(intVY), obj_MovilF) &amp;&amp; !place_meeting(x, y, obj_MovilF) &amp;&amp; (intVY &gt;= 0)
    {
        intVY = 0
        break
    }
    else if place_meeting(x, y+1, obj_MovilH) &amp;&amp; !place_meeting(x, y, obj_MovilH) &amp;&amp; (intVY &gt;= 0)
    {
        //var ins = instance_place(x,y+1,obj_MovilH);
        //intVX = ins.intVX
        intVY = 0
        break
    }
    else
    {
        y += sign(intVY)
        intVX = 0
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for(var i=0; i &lt; array_height_2d(other.arrSlot); i++)
{
    var oBulT = other.arrSlot[i,0];
    if (oBulT == 0) //Si el Slot i esta vacio
    {
        //intRnd=irandom_range(1, array_height_2d(obj_Player.arrWeapon) -1);
        other.arrSlot[i,0] = intRnd
        other.arrBullet[intRnd] += intBullet;
        
        instance_destroy()
        break
    }
    else
    {
        if (obj_Player.arrWeapon[oBulT,4] == "Health") || (obj_Player.arrWeapon[oBulT,4] == "Special")
        {
            if (oBulT == intRnd)//(obj_Player.arrWeapon[intRnd,4] == "Health") || (obj_Player.arrWeapon[intRnd,4] == "Special")
            {
                other.arrBullet[intRnd] += intBullet;
                instance_destroy()
                break
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()
/*draw_text(x-4,y-4, intBullet)
draw_text(x+4,y+4, intRnd)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
